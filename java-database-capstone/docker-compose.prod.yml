version: '3.8'

services:
  # MySQL Database - Production
  mysql-db:
    image: mysql:8.0
    container_name: smartclinic-mysql-prod
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_DATABASE: smart_clinic
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - mysql_prod_data:/var/lib/mysql
      - ./docker/mysql/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - clinic-network-prod
    restart: unless-stopped
    command: 
      - --default-authentication-plugin=mysql_native_password
      - --innodb-buffer-pool-size=512M
      - --innodb-log-file-size=256M
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-uroot", "-p${DB_ROOT_PASSWORD}"]
      timeout: 20s
      retries: 10
      start_period: 40s

  # MongoDB Database - Production
  mongodb:
    image: mongo:6.0
    container_name: smartclinic-mongo-prod
    environment:
      MONGO_INITDB_DATABASE: smart_clinic
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD}
    ports:
      - "27017:27017"
    volumes:
      - mongo_prod_data:/data/db
      - ./docker/mongo/init.js:/docker-entrypoint-initdb.d/init.js:ro
    networks:
      - clinic-network-prod
    restart: unless-stopped
    command: 
      - --wiredTigerCacheSizeGB=0.5
      - --oplogSize=128
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/smart_clinic -u ${MONGO_ROOT_USERNAME} -p ${MONGO_ROOT_PASSWORD} --authenticationDatabase admin --quiet
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Spring Boot Application - Production
  app:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: smartclinic-app-prod
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql-db:3306/smart_clinic?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: ${DB_ROOT_PASSWORD}
      SPRING_DATA_MONGODB_URI: mongodb://${MONGO_ROOT_USERNAME}:${MONGO_ROOT_PASSWORD}@mongodb:27017/smart_clinic?authSource=admin
      SPRING_PROFILES_ACTIVE: prod
      SPRING_JPA_HIBERNATE_DDL_AUTO: validate
      SPRING_JPA_SHOW_SQL: false
      SPRING_JPA_PROPERTIES_HIBERNATE_FORMAT_SQL: false
      LOGGING_LEVEL_COM_SMARTCLINIC: INFO
      JAVA_OPTS: "-Xmx512m -Xms256m -XX:+UseG1GC -XX:MaxGCPauseMillis=200 -XX:+UnlockExperimentalVMOptions -XX:+UseContainerSupport"
    depends_on:
      mysql-db:
        condition: service_healthy
      mongodb:
        condition: service_healthy
    networks:
      - clinic-network-prod
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Frontend (Nginx) - Production
  frontend:
    image: nginx:alpine
    container_name: smartclinic-frontend-prod
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./frontend:/usr/share/nginx/html
      - ./docker/nginx/nginx.prod.conf:/etc/nginx/nginx.conf:ro
      - ./docker/nginx/ssl:/etc/ssl/certs:ro  # SSL sertifikaları için
    depends_on:
      - app
    networks:
      - clinic-network-prod
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis for Session Management - Production
  redis:
    image: redis:alpine
    container_name: smartclinic-redis-prod
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --maxmemory 128mb --maxmemory-policy allkeys-lru
    volumes:
      - redis_prod_data:/data
    networks:
      - clinic-network-prod
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  mysql_prod_data:
    driver: local
  mongo_prod_data:
    driver: local
  redis_prod_data:
    driver: local

networks:
  clinic-network-prod:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.20.0.0/16