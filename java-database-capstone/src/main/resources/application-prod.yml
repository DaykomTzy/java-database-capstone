# Production Specific Configuration
spring:
  datasource:
    url: jdbc:mysql://`${MYSQL_HOST:localhost}:3306/smart_clinic?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC&characterEncoding=UTF-8
    username: `${DB_USERNAME:root}
    password: `${DB_PASSWORD}
    hikari:
      maximum-pool-size: 20
      minimum-idle: 5
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000
      leak-detection-threshold: 60000
  
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect
        format_sql: false
        jdbc:
          batch_size: 20
        order_inserts: true
        order_updates: true
        batch_versioned_data: true
  
  data:
    mongodb:
      uri: mongodb://`${MONGO_USERNAME:mongo_admin}:`${MONGO_PASSWORD}@`${MONGO_HOST:localhost}:27017/smart_clinic?authSource=admin&retryWrites=true&w=majority
      auto-index-creation: true
  
  redis:
    host: `${REDIS_HOST:localhost}
    port: `${REDIS_PORT:6379}
    timeout: 2000
    lettuce:
      pool:
        max-active: 20
        max-idle: 10
        min-idle: 5
        max-wait: 2000
  
  cache:
    type: redis
    redis:
      time-to-live: 3600000
      cache-null-values: false
  
  mail:
    host: `${SMTP_HOST}
    port: `${SMTP_PORT:587}
    username: `${SMTP_USERNAME}
    password: `${SMTP_PASSWORD}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
          connectiontimeout: 5000
          timeout: 5000
          writetimeout: 5000
  
  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 10MB

server:
  port: `${SERVER_PORT:8080}
  servlet:
    context-path: /api
  compression:
    enabled: true
    mime-types: text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json
    min-response-size: 1024
  tomcat:
    max-threads: 200
    min-spare-threads: 20
    connection-timeout: 30000

logging:
  level:
    com.smartclinic: `${LOG_LEVEL:INFO}
    org.hibernate: WARN
    org.springframework: WARN
    org.apache.tomcat: WARN
  file:
    name: `${LOG_FILE_PATH:/var/log/smartclinic}/application.log
    max-size: 10MB
    max-history: 30
  pattern:
    file: "%d{yyyy-MM-dd HH:mm:ss} - %logger{36} - %level - %msg%n"
    console: "%d{yyyy-MM-dd HH:mm:ss} - %logger{36} - %level - %msg%n"

management:
  endpoints:
    web:
      exposure:
        include: health,metrics,info,prometheus
      base-path: /management
    enabled-by-default: false
  endpoint:
    health:
      show-details: always
      show-components: always
      probes:
        enabled: true
    metrics:
      enabled: true
    prometheus:
      enabled: true
  info:
    env:
      enabled: true
  health:
    db:
      enabled: true
    redis:
      enabled: true
    diskspace:
      enabled: true
    mail:
      enabled: true

# Custom Application Properties
app:
  security:
    jwt:
      secret: `${JWT_SECRET}
      expiration: `${JWT_EXPIRATION:86400000}
    cors:
      allowed-origins: `${CORS_ALLOWED_ORIGINS}
      allowed-methods: `${CORS_ALLOWED_METHODS:GET,POST,PUT,DELETE,OPTIONS}
      allowed-headers: `${CORS_ALLOWED_HEADERS:*}
      allow-credentials: `${CORS_ALLOW_CREDENTIALS:true}
  rate-limiting:
    enabled: `${RATE_LIMITING_ENABLED:true}
    requests-per-minute: `${RATE_LIMITING_REQUESTS_PER_MINUTE:100}
  features:
    email-notifications: `${FEATURE_EMAIL_NOTIFICATIONS:true}
    sms-notifications: `${FEATURE_SMS_NOTIFICATIONS:false}
    advanced-reporting: `${FEATURE_ADVANCED_REPORTING:true}
